<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="classpath*:spring/component/nodeurisource/nodeurisource-random.xml"/>
    <import resource="classpath*:spring/component/botContext/botContext.xml"/>
    <import resource="classpath:/spring/component/atomproducer/atomproducer-mixed.xml"/>

    <bean id="raidBot" class="won.spoco.raid.bot.impl.RaidBot">
        <!-- optional property, by default one echo need per each need will be created -->

        <property name="botContextWrapper" ref="botContextWrapper" />
        <property name="taskScheduler" ref="taskScheduler" />
        <property name="trigger">
            <bean class="org.springframework.scheduling.support.PeriodicTrigger">
                <constructor-arg name="period" value="60000" />
                <constructor-arg name="timeUnit" value="MILLISECONDS" />
                <property name="initialDelay" value="10000" /> <!-- wait 10s at the beginning -->
                <property name="fixedRate" value="false" />  <!-- fixed delay after completion -->
            </bean>
        </property>
    </bean>

    <bean id="botContextWrapper" class="won.spoco.raid.bot.impl.RaidBotContextWrapper">
        <constructor-arg name="botContext" ref="${botContext.impl}"/>
        <constructor-arg name="botName" value="${raidbot.name}"/>
        <constructor-arg name="raidFetcher" ref="raidFetcher"/>
    </bean>

    <bean id="raidFetcher" class="won.spoco.raid.bot.api.RaidFetcherImpl">
        <constructor-arg name="endpoint" value="${api.endpoint}"/>
        <constructor-arg name="token" value="${api.token}"/>
    </bean>
</beans>
