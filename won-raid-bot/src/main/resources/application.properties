bot.name=SpocoRaidBot

# Uri of our bot (this doesn't matter much)
won.owner.uri=https://localhost:8443/owner

# Uri of the node we want to connect to
won.node.uri=${WON_NODE_URI}

#Dependent configs, you don't need to change them

uri.prefix.node.default=${won.node.uri}

won.node.uris=${uri.prefix.node.default}/resource

# default WON node URI
uri.node.default=${uri.prefix.node.default}/resource

#the protocol URIs below must match what's defined in the sun-jaxws.xml file in the webapp
uri.atom.protocol.endpoint.default=${uri.prefix.node.default}/protocol/owner

uri.prefix.owner=${won.owner.uri}
uri.owner.protocol.endpoint=${uri.prefix.owner}/protocol

# BotContext can either be memoryBotContext or mongoBotContext for now
botContext.impl=memoryBotContext

# The following attributes are only necessary if mongoBotContext is chosen
# botContext.mongodb.user=won
# botContext.mongodb.pass=won
# botContext.mongodb.host=localhost
# botContext.mongodb.port=27017
# botContext.mongodb.database=won
# ########################################################################

keystores.password=changeit
keystores.directory=${WON_KEYSTORE_DIR}

# keystore properties
keystore.password=${keystores.password}
keystore.location=${keystores.directory}/bot-keys.jks

# truststore properties
truststore.password=${keystores.password}
truststore.location=${keystores.directory}/owner-trusted-certs.jks

# DB - Alternative: local hsql
db.sql.jdbcDriverClass=org.hsqldb.jdbcDriver
db.sql.jdbcUrl=jdbc:hsqldb:mem:testdb2;hsqldb.tx=mvcc
db.sql.user=sa
db.sql.password=
db.ddl.strategy=create

matcher.uri=http://localhost:8080/matcher

api.linz.endpoint=
api.linz.token=

api.vienna.endpoint=
api.vienna.username=
api.vienna.request=

# Intervals and Thresholds (in seconds)
# interval between api fetches
raidbot.fetchInterval=300
# interval between raid sanitation (checks if any raid is expired and deletes raids accordingly)
raidbot.sanitizeInterval=3600
# threshold that is added on top of the current system time to determine how long after expiration a raid is still in the system
raidbot.expirationThreshold=3600

# if set to true, the bot will no longer fetch Raids (or create Atoms).
# it will only handle the existing atoms/raids (e.g delete when expired), as soon as no active RaidAtom is known to the bot
# it will shut down
raidbot.phaseOut=false